{% extends 'layout.twig' %}

{% block body %}
  <div class="row mt-2">
    <div class="col-12">
      <h1 class="display-1">Acquisition</h1>
    </div>
  </div>
  <div class="row mt-2">
    <div class="col-8">

      <div class="card shadow">
        <div class="card-body">
          <h4 class="card-title">Live data</h4>
          <p class="card-text">Last acquired data at <span id="timestamp" >...waiting...</span>.</p>
          <h4 id="measure" class="display-3">nA</h4>

        </div>
      </div>

    </div>
    <div class="col-4">
      <div class="card shadow">
        <div class="card-body">
          <h4 class="card-title">Control</h4>
          <p class="card-text">Use these controls to start or stop a record</p>
          <button type="button" name="" id="start" class="btn btn-success btn-lg btn-block" style="display: block">Start</button>
          <button type="button" name="" id="stop" class="btn btn-danger btn-lg btn-block" style="display: none">Stop</button>
          <button type="button" name="" id="reset" class="btn btn-warning btn-lg btn-block mt-4" style="display: block">Reset</button>
          <p class="card-text">Current state : <span id="state">nA</span> </p>
        </div>
      </div>
    </div>
  </div>

  <div class="row d-print-none mt-4">
    <div class="col-12">
    <div class="card shadow">
        <div class="card-body">
            <canvas id="graph" ></canvas>
        </div>
    </div>
    </div>
</div>

{% endblock %}


{% block scripts %}

  <script type="text/javascript">
  
    $(() => {

      let barChart=null;

      let labels = []
      let values = []
      let cptP = 0
      let cptY = 0
      let cptOther = 0

      labels.push("Pink","Yellow","Other")

      setInterval(() => {

        $.ajax({
          type: "post",
          url: "/api/state",
          dataType: "json",
          success: function (response) {
            console.log(response);
            $('#timestamp').text(response.lastTimestamp);
            $('#measure').text(response.lastAcquisition);
            $('#state').text((response.idle ? "IDLE" : "recording..."));

            if(response.idle){
              $("#start").show();
              $("#stop").hide();
            } else {
              $("#stop").show();
              $("#start").hide();
            }

            if(reponse.lastAcquisition === 'PINK'){
              cptP++
            } else if(reponse.lastAcquisition === 'YELLOW'){
              cptY++
            } else if(reponse.lastAcquisition === 'OTHER') {
              cptOther++
            }

            values.push(cptP, cptY, cptOther)

            // DATA POUR LA TABLE ET SA CREATION
            const data = {
            labels: labels,
            datasets: [{
                label: 'Acquisition',
                data: values,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(255, 205, 86, 0.2)',
                    'rgba(153, 102, 255, 0.2)'
                ],
                borderColor: [
                    'rgb(255, 99, 132)',
                    'rgb(255, 205, 86)',
                    'rgb(153, 102, 255)'
                ],
                borderWidth: 1
            }]
            }
      
            if(barChart === null){
                const graph = $("#graph")
                barChart = new Chart(graph, {
                    type: 'bar',
                    data: data,
                    options: {
                        scales: {
                          y: {
                            beginAtZero: true
                          }
                        }
                      },
                })
            } else {
                barChart.destroy()
                const graph = $("#graph")
                barChart = new Chart(graph, {
                    type: 'bar',
                    data: data,
                    options: {
                        scales: {
                          y: {
                            beginAtZero: true
                          }
                        }
                      },
                 })
              }
            // FIN DATA TABLE
          }
        
        });
        
      }, 1000);

    });

  $("#start").click(function (e) { 
    e.preventDefault();
    $.post("/api/start",
      function (data, textStatus, jqXHR) {
        
      },
      "json"
    );
  });

  $("#stop").click(function (e) { 
    e.preventDefault();
    $.post("/api/stop",
      function (data, textStatus, jqXHR) {
        
      },
      "json"
    );
  });

  $("#reset").click(function (e) { 
    e.preventDefault();
    $.post("/api/sendData",
      function (data, textStatus, jqXHR) {
        
      },
      "json"
    );
  });

  
  </script>

{% endblock %}

{% block stylesheets %}
<link href="https://cdn.datatables.net/v/bs4/dt-2.0.3/datatables.min.css" rel="stylesheet">
{% endblock %}