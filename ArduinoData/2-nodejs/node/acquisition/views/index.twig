{% extends 'layout.twig' %}

{% block body %}
  <div class="row mt-2">
    <div class="col-12">
      <h1 class="display-1">Acquisition</h1>
    </div>
  </div>
  <div class="row mt-2">
    <div class="col-8">

      <div class="card shadow">
        <div class="card-body">
          <h4 class="card-title">Live data</h4>
          <p class="card-text">Last acquired data at <span id="timestamp" >...waiting...</span>.</p>
          <h4 id="measure" class="display-3">nA</h4>

        </div>
      </div>

    </div>
    <div class="col-4">
      <div class="card shadow">
        <div class="card-body">
          <h4 class="card-title">Control</h4>
          <p class="card-text">Use these controls to start or stop a record</p>
          <button type="button" name="" id="start" class="btn btn-success btn-lg btn-block" style="display: block">Start</button>
          <button type="button" name="" id="stop" class="btn btn-danger btn-lg btn-block" style="display: none">Stop</button>
          <button type="button" name="" id="reset" class="btn btn-warning btn-lg btn-block mt-4" style="display: block">Reset</button>
          <p class="card-text">Current state : <span id="state">nA</span> </p>
        </div>
      </div>
    </div>
  </div>

  <div class="row d-print-none mt-4 mb-4">
    <div class="col-12">
    <div class="card shadow">
        <div class="card-body">
            <canvas id="graph" ></canvas>
        </div>
    </div>
    </div>
</div>

{% endblock %}


{% block scripts %}
  <!-- Inclure jQuery et Chart.js -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script type="text/javascript">
    $(() => {
      let barChart = null;
      let labels = ["Pink", "Yellow", "Other"];
      let values = [0, 0, 0];
      let lastTimestamp = null; // Garder une trace du dernier timestamp

      setInterval(() => {
        $.ajax({
          type: "post",
          url: "/api/state",
          dataType: "json",
          success: function (response) {
            $('#timestamp').text(response.lastTimestamp);
            
            if(response.lastAcquisition !== null)
              $('#measure').text(response.lastAcquisition);
            else
              $('#measure').text("EMPTY");

            $('#state').text(response.idle ? "IDLE" : "recording...");
            if(response.idle){
              $('#start').show();
              $('#stop').hide();
            }else{
              $('#start').hide();
              $('#stop').show();
            }

            // Vérifier si le timestamp de la dernière acquisition est différent du précédent
            if (response.lastTimestamp !== lastTimestamp) {
              // Mettre à jour le dernier timestamp
              lastTimestamp = response.lastTimestamp;

              // Mettre à jour les compteurs en fonction de la dernière acquisition
              if (response.lastAcquisition === 'PINK') {
                values[0]++;
              } else if (response.lastAcquisition === 'YELLOW') {
                values[1]++;
              } else if (response.lastAcquisition === 'OTHER') {
                values[2]++;
              }

              // Mettre à jour le graphique
              updateChart();
            }
          }
        });
      }, 1000);

      function updateChart() {
        const data = {
          labels: labels,
          datasets: [{
            label: 'Acquisition',
            data: values,
            backgroundColor: [
              'rgba(255, 99, 132, 0.2)',
              'rgba(255, 205, 86, 0.2)',
              'rgba(153, 102, 255, 0.2)'
            ],
            borderColor: [
              'rgb(255, 99, 132)',
              'rgb(255, 205, 86)',
              'rgb(153, 102, 255)'
            ],
            borderWidth: 1
          }]
        };

        if (barChart === null) {
          const graph = document.getElementById('graph');
          barChart = new Chart(graph, {
            type: 'bar',
            data: data,
            options: {
              scales: {
                y: {
                  beginAtZero: true
                }
              }
            }
          });
        } else {
          barChart.data.datasets.forEach((dataset) => {
            dataset.data = values;
          });
          barChart.update();
        }
      }

      // Gestionnaires d'événements pour les boutons
      $("#start").click(function (e) {
        e.preventDefault();
        $.post("/api/start", function (data, textStatus, jqXHR) {
          // Traiter la réponse si nécessaire
        }, "json");
      });

      $("#stop").click(function (e) {
        e.preventDefault();
        $.post("/api/stop", function (data, textStatus, jqXHR) {
          // Traiter la réponse si nécessaire
        }, "json");
      });

      $("#reset").click(function (e) {
        values = [0, 0, 0];
        updateChart();
        e.preventDefault();
        $.post("/api/sendData", function (data, textStatus, jqXHR) {
          // Traiter la réponse si nécessaire
        }, "json");
      });

    });
  </script>
{% endblock %}

{% block stylesheets %}
<link href="https://cdn.datatables.net/v/bs4/dt-2.0.3/datatables.min.css" rel="stylesheet">
{% endblock %}